__printf() { printf '%s\n' $@ }

__skilcrypt_rmcmd() {
    __da_cmd=$1
    shift

    [[ ${__da_cmd} == "src" ]] && {
        find $@ -type f ! -name "*.gpg" -print0 | xargs -0 rm --force
    } || {
        find $@ -type f -name "*.gpg" -print0 | xargs -0 rm --force
    }
}

__skilcrypt_invoke_gpg() {
    __printf "Enter some LONG password to $1 your files."
    __printf 'Make sure to remember your password !'
    read -s -r da_pazZz

    while [[ -z ${da_pazZz} ]]
    do
        __printf "Enter some LONG password to $1 your files."
        __printf 'Make sure to remember your password !'
        read -s -r da_pazZz
    done

    __printf 'Working... please wait'

    __da_action=$1
    shift

    [[ ${__da_action} == "encrypt" ]] && {
        find $@ -type f ! -name "*.gpg" -print0 | xargs -0 -I{} gpg --batch --quiet \
            --passphrase ${da_pazZz} --cert-digest-algo SHA512 --cipher-algo AES256 \
            --digest-algo SHA512 --s2k-cipher-algo AES256 --s2k-digest-algo SHA512 \
            --s2k-mode 3 --s2k-count 64981052 --compress-algo 0 --symmetric {}
    } || {
        find $@ -type f -name "*.gpg" -print0 | xargs -0 -I{} gpg --batch --quiet \
            --passphrase ${da_pazZz} {}
    }

    __printf 'Done !'

    unset da_pazZz
}

skilcrypt() {

    __targets=('encrypt' 'decrypt' 'rmsrc' 'rmgpg')
    [[ -z $1 ]] || [[ ! " ${__targets[@]} " =~ " $1 " ]] && {
        __printf 'skilcrypt [option] target(s)'
        __printf 'Available options: encrypt, decrypt, rmsrc, rmgpg'
        __printf 'Think before you invoke the rmsrc and rmgpg options !'
        __printf 'rmsrc  --  remove the source files and leave only the encrypted one'
        __printf 'rmgpg  --  remove the decrypted files and leave only the source one'
        return
    }

    [[ -z $2 ]] && {
        __printf 'The target cannot be empty.'
        return
    }

    case $1 in
        encrypt)     shift;  __skilcrypt_invoke_gpg   'encrypt'   $@      ;;
        decrypt)     shift;  __skilcrypt_invoke_gpg   'decrypt'   $@      ;;
        rmsrc)       shift;  __skilcrypt_rmcmd        'src'       $@      ;;
        rmgpg)       shift;  __skilcrypt_rmcmd        'gpg'       $@      ;;
    esac

}
